// lib/widgets/card_interpretation_widget.dart
import 'package:flutter/material.dart';
import '../models/app_config.dart';

class CardInterpretationWidget extends StatefulWidget {
  final TarotCard card;
  final String cardLabel;
  final String? keyword;

  const CardInterpretationWidget({
    super.key,
    required this.card,
    required this.cardLabel,
    this.keyword,
  });

  @override
  State<CardInterpretationWidget> createState() => _CardInterpretationWidgetState();
}

class _CardInterpretationWidgetState extends State<CardInterpretationWidget>
    with TickerProviderStateMixin {
  late AnimationController _fadeController;
  late AnimationController _slideController;
  late Animation<double> _fadeAnimation;
  late Animation<Offset> _slideAnimation;

  @override
  void initState() {
    super.initState();
    
    _fadeController = AnimationController(
      duration: const Duration(milliseconds: 800),
      vsync: this,
    );
    
    _slideController = AnimationController(
      duration: const Duration(milliseconds: 600),
      vsync: this,
    );

    _fadeAnimation = Tween<double>(
      begin: 0.0,
      end: 1.0,
    ).animate(CurvedAnimation(
      parent: _fadeController,
      curve: Curves.easeInOut,
    ));

    _slideAnimation = Tween<Offset>(
      begin: const Offset(0, 0.3),
      end: Offset.zero,
    ).animate(CurvedAnimation(
      parent: _slideController,
      curve: Curves.easeOutCubic,
    ));

    // Ïï†ÎãàÎ©îÏù¥ÏÖò ÏãúÏûë
    Future.delayed(const Duration(milliseconds: 300), () {
      _fadeController.forward();
      _slideController.forward();
    });
  }

  @override
  void dispose() {
    _fadeController.dispose();
    _slideController.dispose();
    super.dispose();
  }

  String get _contextualInterpretation {
    final baseText = widget.card.isReversed 
        ? widget.card.descriptionReversed 
        : widget.card.descriptionUpright;
    
    String contextPrefix = '';
    switch (widget.keyword) {
      case 'love':
        contextPrefix = 'ÏÇ¨ÎûëÍ≥º Í¥ÄÍ≥ÑÏóêÏÑú ';
        break;
      case 'money':
        contextPrefix = 'Ïû¨Ï†ïÍ≥º Î¨ºÏßàÏ†Å Ï∏°Î©¥ÏóêÏÑú ';
        break;
      case 'work':
        contextPrefix = 'ÏßÅÏóÖÍ≥º ÌïôÏóÖÏóêÏÑú ';
        break;
      default:
        contextPrefix = 'Ï†ÑÎ∞òÏ†ÅÏúºÎ°ú ';
    }
    
    return '$contextPrefix$baseText';
  }

  @override
  Widget build(BuildContext context) {
    return AnimatedBuilder(
      animation: Listenable.merge([_fadeAnimation, _slideAnimation]),
      builder: (context, child) {
        return FadeTransition(
          opacity: _fadeAnimation,
          child: SlideTransition(
            position: _slideAnimation,
            child: Container(
              margin: const EdgeInsets.all(16),
              padding: const EdgeInsets.all(24),
              decoration: BoxDecoration(
                gradient: LinearGradient(
                  begin: Alignment.topLeft,
                  end: Alignment.bottomRight,
                  colors: [
                    Colors.white.withOpacity(0.15),
                    Colors.white.withOpacity(0.05),
                  ],
                ),
                borderRadius: BorderRadius.circular(20),
                border: Border.all(
                  color: Colors.white.withOpacity(0.2),
                  width: 1,
                ),
                boxShadow: [
                  BoxShadow(
                    color: Colors.black.withOpacity(0.1),
                    blurRadius: 10,
                    offset: const Offset(0, 4),
                  ),
                ],
              ),
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  // Ìó§Îçî ÏÑπÏÖò
                  Row(
                    children: [
                      Container(
                        padding: const EdgeInsets.symmetric(
                          horizontal: 12,
                          vertical: 6,
                        ),
                        decoration: BoxDecoration(
                          color: const Color(0xFF9966CC).withOpacity(0.8),
                          borderRadius: BorderRadius.circular(20),
                        ),
                        child: Text(
                          '${widget.cardLabel} Ìï¥ÏÑù',
                          style: const TextStyle(
                            color: Colors.white,
                            fontSize: 14,
                            fontWeight: FontWeight.bold,
                          ),
                        ),
                      ),
                      const Spacer(),
                      Icon(
                        widget.card.isReversed 
                            ? Icons.rotate_left 
                            : Icons.auto_awesome,
                        color: Colors.white.withOpacity(0.7),
                        size: 20,
                      ),
                    ],
                  ),
                  
                  const SizedBox(height: 16),
                  
                  // Ïπ¥Îìú Ïù¥Î¶Ñ
                  Text(
                    widget.card.nameKo,
                    style: const TextStyle(
                      color: Colors.white,
                      fontSize: 20,
                      fontWeight: FontWeight.bold,
                    ),
                  ),
                  
                  const SizedBox(height: 8),
                  
                  // Î∞©Ìñ• Î∞è ÌÇ§ÏõåÎìú
                  Row(
                    children: [
                      Container(
                        padding: const EdgeInsets.symmetric(
                          horizontal: 8,
                          vertical: 4,
                        ),
                        decoration: BoxDecoration(
                          color: widget.card.isReversed 
                              ? Colors.orange.withOpacity(0.8)
                              : Colors.green.withOpacity(0.8),
                          borderRadius: BorderRadius.circular(12),
                        ),
                        child: Text(
                          widget.card.isReversed ? 'Ïó≠Î∞©Ìñ•' : 'Ï†ïÎ∞©Ìñ•',
                          style: const TextStyle(
                            color: Colors.white,
                            fontSize: 12,
                            fontWeight: FontWeight.w600,
                          ),
                        ),
                      ),
                      const SizedBox(width: 8),
                      Expanded(
                        child: Text(
                          widget.card.keywords,
                          style: TextStyle(
                            color: Colors.white.withOpacity(0.9),
                            fontSize: 13,
                            fontWeight: FontWeight.w500,
                          ),
                        ),
                      ),
                    ],
                  ),
                  
                  const SizedBox(height: 20),
                  
                  // Íµ¨Î∂ÑÏÑ†
                  Container(
                    height: 1,
                    decoration: BoxDecoration(
                      gradient: LinearGradient(
                        colors: [
                          Colors.white.withOpacity(0.2),
                          Colors.white.withOpacity(0.6),
                          Colors.white.withOpacity(0.2),
                        ],
                      ),
                    ),
                  ),
                  
                  const SizedBox(height: 20),
                  
                  // Ìï¥ÏÑù ÎÇ¥Ïö©
                  Text(
                    'üí´ Ïπ¥ÎìúÏùò Î©îÏãúÏßÄ',
                    style: const TextStyle(
                      color: Colors.white,
                      fontSize: 16,
                      fontWeight: FontWeight.bold,
                    ),
                  ),
                  
                  const SizedBox(height: 12),
                  
                  Text(
                    _contextualInterpretation,
                    style: const TextStyle(
                      color: Colors.white,
                      fontSize: 15,
                      height: 1.6,
                      fontWeight: FontWeight.w400,
                    ),
                  ),
                  
                  const SizedBox(height: 20),
                  
                  // Ï°∞Ïñ∏ ÏÑπÏÖò
                  Container(
                    padding: const EdgeInsets.all(16),
                    decoration: BoxDecoration(
                      color: const Color(0xFF9966CC).withOpacity(0.2),
                      borderRadius: BorderRadius.circular(12),
                      border: Border.all(
                        color: const Color(0xFF9966CC).withOpacity(0.3),
                        width: 1,
                      ),
                    ),
                    child: Column(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        Row(
                          children: [
                            const Icon(
                              Icons.lightbulb_outline,
                              color: Colors.amber,
                              size: 18,
                            ),
                            const SizedBox(width: 8),
                            Text(
                              'Ï°∞Ïñ∏',
                              style: const TextStyle(
                                color: Colors.white,
                                fontSize: 14,
                                fontWeight: FontWeight.bold,
                              ),
                            ),
                          ],
                        ),
                        const SizedBox(height: 8),
                        Text(
                          _getAdviceText(),
                          style: TextStyle(
                            color: Colors.white.withOpacity(0.9),
                            fontSize: 13,
                            height: 1.5,
                          ),
                        ),
                      ],
                    ),
                  ),
                ],
              ),
            ),
          ),
        );
      },
    );
  }

  String _getAdviceText() {
    if (widget.card.isReversed) {
      switch (widget.keyword) {
        case 'love':
          return 'Í¥ÄÍ≥ÑÏóêÏÑú Í∑†ÌòïÏùÑ Ï∞æÍ≥†, ÏÜåÌÜµÏùÑ ÌÜµÌï¥ Ïò§Ìï¥Î•º ÌíÄÏñ¥ÎÇòÍ∞ÄÎäî Í≤ÉÏù¥ Ï§ëÏöîÌï©ÎãàÎã§.';
        case 'money':
          return 'Í∏àÏ†Ñ Í¥ÄÎ¶¨Ïóê ÎçîÏö± Ïã†Ï§ëÌïòÍ≤å Ï†ëÍ∑ºÌïòÍ≥†, Í≥ÑÌöçÏ†ÅÏù∏ ÏÜåÎπÑÎ•º ÌïòÏãúÍ∏∞ Î∞îÎûçÎãàÎã§.';
        case 'work':
          return 'ÌòÑÏû¨Ïùò Ïñ¥Î†§ÏõÄÏùÄ ÏùºÏãúÏ†ÅÏûÖÎãàÎã§. Ïù∏ÎÇ¥Ïã¨ÏùÑ Í∞ñÍ≥† Íæ∏Ï§ÄÌûà ÎÖ∏Î†•ÌïòÏÑ∏Ïöî.';
        default:
          return 'ÌòÑÏû¨ ÏÉÅÌô©ÏùÑ Îã§Î•∏ Í¥ÄÏ†êÏóêÏÑú Î∞îÎùºÎ≥¥Í≥†, ÏÉàÎ°úÏö¥ Ï†ëÍ∑º Î∞©ÏãùÏùÑ ÏãúÎèÑÌï¥Î≥¥ÏÑ∏Ïöî.';
      }
    } else {
      switch (widget.keyword) {
        case 'love':
          return 'Í∏çÏ†ïÏ†ÅÏù∏ ÏóêÎÑàÏßÄÍ∞Ä ÌùêÎ•¥Í≥† ÏûàÏäµÎãàÎã§. ÎßàÏùåÏùÑ Ïó¥Í≥† ÏßÑÏã§Ìïú Í∞êÏ†ïÏùÑ ÌëúÌòÑÌïòÏÑ∏Ïöî.';
        case 'money':
          return 'Ïû¨Ï†ïÏ†Å Í∏∞ÌöåÍ∞Ä Îã§Í∞ÄÏò§Í≥† ÏûàÏäµÎãàÎã§. ÌòÑÎ™ÖÌïú ÌåêÎã®ÏúºÎ°ú ÏïàÏ†ïÏùÑ Ï∂îÍµ¨ÌïòÏÑ∏Ïöî.';
        case 'work':
          return 'Î™©ÌëúÎ•º Ìñ•Ìïú Í∏∏Ïù¥ Ïó¥Î†§ÏûàÏäµÎãàÎã§. ÏûêÏã†Í∞êÏùÑ Í∞ñÍ≥† Ï†ÅÍ∑πÏ†ÅÏúºÎ°ú ÌñâÎèôÌïòÏÑ∏Ïöî.';
        default:
          return 'Ï¢ãÏùÄ ÌùêÎ¶Ñ ÏÜçÏóê ÏûàÏäµÎãàÎã§. ÌòÑÏû¨Ïùò Î∞©Ìñ•ÏùÑ Ïú†ÏßÄÌïòÎ©∞ Íæ∏Ï§ÄÌûà ÎÇòÏïÑÍ∞ÄÏÑ∏Ïöî.';
      }
    }
  }
}